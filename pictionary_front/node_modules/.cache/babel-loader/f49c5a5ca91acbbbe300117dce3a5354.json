{"ast":null,"code":"import _slicedToArray from \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport io from \"socket.io-client\";\nlet socket;\n\nconst IngameSocket = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        users = _useState6[0],\n        setUsers = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        messages = _useState10[0],\n        setMessages = _useState10[1];\n\n  const SocketServer = 'http://localhost:7001/';\n  useEffect(() => {\n    const name = 'TEST';\n    const room = 'TEST';\n    socket = io(SocketServer);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [SocketServer, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on('roomData', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n};\n\nexport default class Ingame extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem('token');\n    const partyId = this.props.match.params.id;\n    const socket = io('http://localhost:7001/');\n    this.state = {\n      token,\n      partyId,\n      socket\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n}\n/* \nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"\n//import axios from 'axios';\nimport io from 'socket.io-client'\nimport useChat from \"../SocketFunction/S\";\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n\n        this.SocketManager = this.SocketManager.bind(this);\n\n        const socket = io('http://localhost:7001/')\n        const { messages, sendMessage } = useChat();\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket,\n            messages,\n            sendMessage\n        }\n    }\n\n    componentDidMount(){\n        const init = {\n            partyId: this.state.partyId,\n            token: this.state.token\n        }\n        this.state.socket.emit('newPlayer', init)\n\n    }\n\n    SocketManager(){\n        const socket = io('http://localhost:7001/')\n        socket.on('user-connected', name => console.log(name))\n    }\n\n\n\n    render() {\n        const socket = io('http://localhost:7001/')\n        socket.on('user-connected', name => console.log(name))\n\n        if (!this.state.token){\n            return (<Redirect to=\"/users/login\"/>)\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-6\" style={{borderRight: '1px solid #ccc', borderLeft: '1px solid #ccc'}}>\n                    <canvas \n                        id = \"gameCanvas\"\n                        ref=\"game\" \n                        width=\"480\" \n                        height = \"640\" \n                        style = {{border: \"1px solid black\"}}>\n                    </canvas>\n                    <p>\n                    <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>\n                    <button >Clear</button>\n                    <input type=\"color\" id=\"lineColor\"/>\n                    </p>\n                </div>\n                <div className=\"col-4\" style={{borderRight: '1px solid #ccc'}}>\n                    <ul id=\"messages\"></ul>\n                    <Footer>\n                        <div class=\"input-group\">\n                            <input class=\"form-control width100\"/>\n                            <span class=\"input-group-btn\">\n                                <button class=\"btn btn-info\">Submit</button>\n                            </span>\n                        </div>\n                    </Footer>\n                </div>\n                <div className=\"col\" style={{borderRight: '1px solid #ccc'}}>\n                    Players\n                </div>\n            </div>\n            \n        )\n    }\n}\n/* <div className=\"row mt-5\">\n<div className=\"col-md-4 m-auto\" width='50%'>\n    <div>\n        <canvas \n        id = \"gameCanvas\"\n        ref=\"game\" \n        width=\"480\" \n        height = \"640\" \n        style = {{border: \"1px solid black\"}}>\n        </canvas>\n        <p>\n        <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>>\n        <button >Clear</button>\n        <input type=\"color\" id=\"lineColor\"/>\n        </p>\n    </div>\n</div>\n<div className=\"col-md-4 m-auto\" width = '50%'>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <Footer>\n        <div class=\"input-group\">\n            <input class=\"form-control width100\"/>\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-info\">Submit</button>\n            </span>\n        </div>\n        </Footer>\n    </div>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <div className=\"card card-body text-center\">\n            TEST\n        </div>\n    </div>\n</div>\n\n</div> */","map":{"version":3,"sources":["/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js"],"names":["React","useState","useEffect","Component","io","socket","IngameSocket","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","SocketServer","emit","error","alert","search","on","off","sendMessage","event","preventDefault","Ingame","constructor","props","token","localStorage","getItem","partyId","match","params","id","state","render"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport io from \"socket.io-client\";\n\nlet socket;\n\nconst IngameSocket = ({ location }) => {\n    \n\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const SocketServer = 'http://localhost:7001/';\n\n    useEffect(() => {\n        const name = 'TEST';\n        const room = 'TEST';\n\n        socket = io(SocketServer);\n\n        setRoom(room);\n        setName(name)\n\n        socket.emit('join', { name, room }, (error) => {\n        if(error) {\n            alert(error);\n        }\n        });\n    }, [SocketServer, location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n        setMessages([...messages, message ]);\n        });\n\n        socket.on('roomData', ({ users }) => {\n        setUsers(users);\n        })\n\n        return () => {\n        socket.emit('disconnect');\n\n        socket.off();\n        }\n    }, [messages])\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n        socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n};\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n\n        const socket = io('http://localhost:7001/')\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket,\n        }\n    }\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\n/* \nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"\n//import axios from 'axios';\nimport io from 'socket.io-client'\nimport useChat from \"../SocketFunction/S\";\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n\n        this.SocketManager = this.SocketManager.bind(this);\n\n        const socket = io('http://localhost:7001/')\n        const { messages, sendMessage } = useChat();\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket,\n            messages,\n            sendMessage\n        }\n    }\n\n    componentDidMount(){\n        const init = {\n            partyId: this.state.partyId,\n            token: this.state.token\n        }\n        this.state.socket.emit('newPlayer', init)\n\n    }\n\n    SocketManager(){\n        const socket = io('http://localhost:7001/')\n        socket.on('user-connected', name => console.log(name))\n    }\n\n\n\n    render() {\n        const socket = io('http://localhost:7001/')\n        socket.on('user-connected', name => console.log(name))\n\n        if (!this.state.token){\n            return (<Redirect to=\"/users/login\"/>)\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-6\" style={{borderRight: '1px solid #ccc', borderLeft: '1px solid #ccc'}}>\n                    <canvas \n                        id = \"gameCanvas\"\n                        ref=\"game\" \n                        width=\"480\" \n                        height = \"640\" \n                        style = {{border: \"1px solid black\"}}>\n                    </canvas>\n                    <p>\n                    <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>\n                    <button >Clear</button>\n                    <input type=\"color\" id=\"lineColor\"/>\n                    </p>\n                </div>\n                <div className=\"col-4\" style={{borderRight: '1px solid #ccc'}}>\n                    <ul id=\"messages\"></ul>\n                    <Footer>\n                        <div class=\"input-group\">\n                            <input class=\"form-control width100\"/>\n                            <span class=\"input-group-btn\">\n                                <button class=\"btn btn-info\">Submit</button>\n                            </span>\n                        </div>\n                    </Footer>\n                </div>\n                <div className=\"col\" style={{borderRight: '1px solid #ccc'}}>\n                    Players\n                </div>\n            </div>\n            \n        )\n    }\n}\n/* <div className=\"row mt-5\">\n<div className=\"col-md-4 m-auto\" width='50%'>\n    <div>\n        <canvas \n        id = \"gameCanvas\"\n        ref=\"game\" \n        width=\"480\" \n        height = \"640\" \n        style = {{border: \"1px solid black\"}}>\n        </canvas>\n        <p>\n        <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>>\n        <button >Clear</button>\n        <input type=\"color\" id=\"lineColor\"/>\n        </p>\n    </div>\n</div>\n<div className=\"col-md-4 m-auto\" width = '50%'>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <Footer>\n        <div class=\"input-group\">\n            <input class=\"form-control width100\"/>\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-info\">Submit</button>\n            </span>\n        </div>\n        </Footer>\n    </div>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <div className=\"card card-body text-center\">\n            TEST\n        </div>\n    </div>\n</div>\n\n</div> */ "]},"metadata":{},"sourceType":"module"}