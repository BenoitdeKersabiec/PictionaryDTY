{"ast":null,"code":"var _jsxFileName = \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\";\nlet socket;\n\nconst IngameSocket = ({\n  location\n}) => {\n  const token = localStorage.getItem('token');\n  const partyId = localStorage.getItem('partyID');\n  const SocketServer = 'http://localhost:7001/';\n\n  function appendMessage(message) {\n    const messageContainer = document.getElementById('message-container');\n    const messageElement = document.createElement('div');\n    messageElement.innerText = message;\n    messageContainer.append(messageElement);\n  }\n\n  useEffect(() => {\n    socket = io(SocketServer);\n    const init = {\n      partyId: partyId,\n      token: token\n    };\n    socket.emit('newPlayer', init);\n    socket.on('userConnected', rouge => {\n      console.log(rouge);\n      appendMessage(rouge + ' is connected');\n    });\n  });\n\n  if (!token) {\n    return React.createElement(Redirect, {\n      to: \"/users/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6\",\n    style: {\n      borderRight: '1px solid #ccc',\n      borderLeft: '1px solid #ccc'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    id: \"gameCanvas\",\n    width: \"480\",\n    height: \"640\",\n    style: {\n      border: \"1px solid black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"range\",\n    min: \"1\",\n    max: \"10\",\n    value: \"1\",\n    class: \"slider\",\n    id: \"lineWidth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(\"input\", {\n    type: \"color\",\n    id: \"lineColor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col-4\",\n    style: {\n      borderRight: '1px solid #ccc'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"message-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"form-control width100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    class: \"input-group-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    class: \"btn btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Submit\"))))), React.createElement(\"div\", {\n    className: \"col\",\n    style: {\n      borderRight: '1px solid #ccc'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Players\"));\n};\n\nexport default IngameSocket;\n/*export default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket,\n        }\n    }\n    render() {\n        return (\n            <div>\n                TEST\n            </div>\n        )\n    }\n} */\n\n/* import React, { Component, useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"\n//import axios from 'axios';\nimport io from 'socket.io-client'\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = localStorage.getItem('partyID');\n        \n\n        const socket = io('http://localhost:7001/')\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket\n        }\n    }\n\n    componentDidMount(){\n        console.log('party id:')\n        console.log(this.state.partyId);\n        const init = {\n            partyId: this.state.partyId,\n            token: this.state.token\n        }\n        this.state.socket.emit('newPlayer', init)\n\n    }\n\n    \n    render() {\n\n        if (!this.state.token){\n            return (<Redirect to=\"/users/login\"/>)\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-6\" style={{borderRight: '1px solid #ccc', borderLeft: '1px solid #ccc'}}>\n                    <canvas \n                        id = \"gameCanvas\"\n                        ref=\"game\" \n                        width=\"480\" \n                        height = \"640\" \n                        style = {{border: \"1px solid black\"}}>\n                    </canvas>\n                    <p>\n                    <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>\n                    <button >Clear</button>\n                    <input type=\"color\" id=\"lineColor\"/>\n                    </p>\n                </div>\n                <div className=\"col-4\" style={{borderRight: '1px solid #ccc'}}>\n                    <ul id=\"messages\"></ul>\n                    <Footer>\n                        <div class=\"input-group\">\n                            <input class=\"form-control width100\"/>\n                            <span class=\"input-group-btn\">\n                                <button class=\"btn btn-info\">Submit</button>\n                            </span>\n                        </div>\n                    </Footer>\n                </div>\n                <div className=\"col\" style={{borderRight: '1px solid #ccc'}}>\n                    Players\n                </div>\n            </div>\n            \n        )\n    }\n} */\n\n/* <div className=\"row mt-5\">\n<div className=\"col-md-4 m-auto\" width='50%'>\n    <div>\n        <canvas \n        id = \"gameCanvas\"\n        ref=\"game\" \n        width=\"480\" \n        height = \"640\" \n        style = {{border: \"1px solid black\"}}>\n        </canvas>\n        <p>\n        <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>>\n        <button >Clear</button>\n        <input type=\"color\" id=\"lineColor\"/>\n        </p>\n    </div>\n</div>\n<div className=\"col-md-4 m-auto\" width = '50%'>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <Footer>\n        <div class=\"input-group\">\n            <input class=\"form-control width100\"/>\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-info\">Submit</button>\n            </span>\n        </div>\n        </Footer>\n    </div>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <div className=\"card card-body text-center\">\n            TEST\n        </div>\n    </div>\n</div>\n\n</div> */","map":{"version":3,"sources":["/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js"],"names":["React","useState","useEffect","Component","io","Redirect","Footer","socket","IngameSocket","location","token","localStorage","getItem","partyId","SocketServer","appendMessage","message","messageContainer","document","getElementById","messageElement","createElement","innerText","append","init","emit","on","rouge","console","log","borderRight","borderLeft","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"\n\nlet socket;\n\nconst IngameSocket = ({ location }) => {\n    \n\n    const token = localStorage.getItem('token');\n    const partyId = localStorage.getItem('partyID');\n\n    const SocketServer = 'http://localhost:7001/';\n\n    function appendMessage(message) {\n        const messageContainer = document.getElementById('message-container')\n        const messageElement = document.createElement('div')\n        messageElement.innerText = message\n        messageContainer.append(messageElement)\n    }\n\n    useEffect(() => {\n        socket = io(SocketServer);\n        const init = {\n            partyId: partyId,\n            token: token\n        }\n        socket.emit('newPlayer', init)\n        socket.on('userConnected', rouge => {\n            console.log(rouge);\n            appendMessage(rouge + ' is connected')\n            })\n    })\n\n\n    \n    if (!token){\n        return (<Redirect to=\"/users/login\"/>)\n    }\n    return (\n        <div className=\"row\">\n            <div className=\"col-6\" style={{borderRight: '1px solid #ccc', borderLeft: '1px solid #ccc'}}>\n            <canvas \n                    id = \"gameCanvas\"\n                    width=\"480\"\n                    height = \"640\" \n                    style = {{border: \"1px solid black\"}}>\n                </canvas>\n                <p>\n                <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>\n                <button >Clear</button>\n                <input type=\"color\" id=\"lineColor\"/>\n                </p>\n            </div>\n            <div className=\"col-4\" style={{borderRight: '1px solid #ccc'}}>\n                <div id=\"message-container\"></div>\n                <Footer>\n                    <div class=\"input-group\">\n                        <input class=\"form-control width100\"/>\n                        <span class=\"input-group-btn\">\n                            <button class=\"btn btn-info\">Submit</button>\n                        </span>\n                    </div>\n                </Footer>\n            </div>\n            <div className=\"col\" style={{borderRight: '1px solid #ccc'}}>\n                Players\n            </div>\n        </div>\n        \n    )\n    \n};\n\nexport default IngameSocket\n/*export default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket,\n        }\n    }\n    render() {\n        return (\n            <div>\n                TEST\n            </div>\n        )\n    }\n} */\n\n/* import React, { Component, useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"\n//import axios from 'axios';\nimport io from 'socket.io-client'\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = localStorage.getItem('partyID');\n        \n\n        const socket = io('http://localhost:7001/')\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket\n        }\n    }\n\n    componentDidMount(){\n        console.log('party id:')\n        console.log(this.state.partyId);\n        const init = {\n            partyId: this.state.partyId,\n            token: this.state.token\n        }\n        this.state.socket.emit('newPlayer', init)\n\n    }\n\n    \n    render() {\n\n        if (!this.state.token){\n            return (<Redirect to=\"/users/login\"/>)\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-6\" style={{borderRight: '1px solid #ccc', borderLeft: '1px solid #ccc'}}>\n                    <canvas \n                        id = \"gameCanvas\"\n                        ref=\"game\" \n                        width=\"480\" \n                        height = \"640\" \n                        style = {{border: \"1px solid black\"}}>\n                    </canvas>\n                    <p>\n                    <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>\n                    <button >Clear</button>\n                    <input type=\"color\" id=\"lineColor\"/>\n                    </p>\n                </div>\n                <div className=\"col-4\" style={{borderRight: '1px solid #ccc'}}>\n                    <ul id=\"messages\"></ul>\n                    <Footer>\n                        <div class=\"input-group\">\n                            <input class=\"form-control width100\"/>\n                            <span class=\"input-group-btn\">\n                                <button class=\"btn btn-info\">Submit</button>\n                            </span>\n                        </div>\n                    </Footer>\n                </div>\n                <div className=\"col\" style={{borderRight: '1px solid #ccc'}}>\n                    Players\n                </div>\n            </div>\n            \n        )\n    }\n} */\n\n\n\n/* <div className=\"row mt-5\">\n<div className=\"col-md-4 m-auto\" width='50%'>\n    <div>\n        <canvas \n        id = \"gameCanvas\"\n        ref=\"game\" \n        width=\"480\" \n        height = \"640\" \n        style = {{border: \"1px solid black\"}}>\n        </canvas>\n        <p>\n        <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>>\n        <button >Clear</button>\n        <input type=\"color\" id=\"lineColor\"/>\n        </p>\n    </div>\n</div>\n<div className=\"col-md-4 m-auto\" width = '50%'>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <Footer>\n        <div class=\"input-group\">\n            <input class=\"form-control width100\"/>\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-info\">Submit</button>\n            </span>\n        </div>\n        </Footer>\n    </div>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <div className=\"card card-body text-center\">\n            TEST\n        </div>\n    </div>\n</div>\n\n</div> */"]},"metadata":{},"sourceType":"module"}