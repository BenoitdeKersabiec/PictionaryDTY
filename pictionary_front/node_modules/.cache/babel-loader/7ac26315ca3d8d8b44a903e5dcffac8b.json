{"ast":null,"code":"var _jsxFileName = \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/words.component.js\";\nimport React, { Component } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nexport default class Words extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem('token');\n    var data = jwt.decode(token);\n    this.displaysWords = this.displaysWords.bind(this);\n    this.onChangeWord = this.onChangeWord.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      token,\n      isAdmin: data.isAdmin,\n      words: [],\n      newWord: ''\n    };\n  }\n\n  componentDidMount(e) {\n    if (this.state.token) {\n      axios.get('http://localhost:7000/word/words', {\n        params: {\n          token: this.state.token\n        }\n      }).then(res => this.setState({\n        words: res.data\n      })).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  displaysWords() {\n    this.state.words.map(word => {\n      return React.createElement(\"li\", {\n        class: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, word);\n    });\n  }\n\n  onChangeWord(e) {\n    this.setState({\n      newWord: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newWord = {\n      token: this.state.token,\n      word: this.state.newWord\n    };\n    axios.post('http://localhost:7000/word/newword', newWord).then(res => {\n      if (res.data.msg === 'success') {\n        this.setState({\n          loggedIn: true\n        });\n      }\n    });\n  }\n\n  render() {\n    if (!this.state.token) {\n      return React.createElement(Redirect, {\n        to: \"/users/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" add css\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Word Manager\")), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card text-white bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.newWord,\n      onChange: this.onChangeWord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary btn-block\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Add a word\"))))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.displaysWords()));\n  }\n\n}","map":{"version":3,"sources":["/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/words.component.js"],"names":["React","Component","jwt","Redirect","axios","Words","constructor","props","token","localStorage","getItem","data","decode","displaysWords","bind","onChangeWord","onSubmit","state","isAdmin","words","newWord","componentDidMount","e","get","params","then","res","setState","catch","error","console","log","map","word","target","value","preventDefault","post","msg","loggedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport jwt from 'jsonwebtoken';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default class Words extends Component {\n    constructor(props){\n        super(props);\n\n        const token = localStorage.getItem('token');\n        var data = jwt.decode(token);\n\n        this.displaysWords = this.displaysWords.bind(this);\n        this.onChangeWord = this.onChangeWord.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            token,\n            isAdmin: data.isAdmin,\n            words: [],\n            newWord:''\n        }\n    }\n\n    componentDidMount(e){\n        if(this.state.token){\n            axios.get('http://localhost:7000/word/words', {\n                params: {\n                token: this.state.token\n                }})\n            .then(res => this.setState({words: res.data})\n            )\n            .catch((error) => {\n                console.log(error);\n            })}\n    }\n\n    displaysWords(){\n        this.state.words.map(word => {\n            return <li class=\"list-group-item\">{word}</li>\n        })\n    }\n\n    onChangeWord(e){\n        this.setState({\n            newWord: e.target.value\n        })\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newWord = {\n            token:this.state.token,\n            word: this.state.newWord\n        }\n        axios.post('http://localhost:7000/word/newword', newWord)\n        .then(res => {\n            if (res.data.msg === 'success'){\n                this.setState({\n                    loggedIn: true\n                })\n            }\n        });\n    }\n\n\n    render() {\n        if (!this.state.token){\n            return (<Redirect to=\"/users/login\"/>)\n        }\n        return (\n            <div>\n                <div> add css</div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1>Word Manager</h1>\n                    </div>\n                    <div className=\"col\">\n                    <div className=\"card text-white bg-primary\" >\n                    <div className=\"card-body\">\n                        <input \n                            className=\"form-control\"\n                            value={this.state.newWord}\n                            onChange={this.onChangeWord}\n                            />\n                        <button type=\"submit\" className=\"btn btn-secondary btn-block\" onClick={this.onSubmit}>Add a word</button>\n                    </div>\n                    </div>\n                    </div>\n                </div>\n                <p>{ this.displaysWords() }</p>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}