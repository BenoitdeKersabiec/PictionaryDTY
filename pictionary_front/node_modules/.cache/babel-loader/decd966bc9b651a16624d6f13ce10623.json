{"ast":null,"code":"import _slicedToArray from \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\";\nlet socket;\n\nconst IngameSocket = ({\n  location\n}) => {\n  const token = localStorage.getItem('token');\n  const partyId = localStorage.getItem('partyID');\n  this.state = {};\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        users = _useState6[0],\n        setUsers = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        messages = _useState10[0],\n        setMessages = _useState10[1];\n\n  const SocketServer = 'http://localhost:7001/';\n\n  function appendMessage(message) {\n    const messageContainer = document.getElementById('message-container');\n    console.log(messageContainer);\n    const messageElement = document.createElement('div');\n    messageElement.innerText = message;\n    messageContainer.append(messageElement);\n  }\n\n  useEffect(() => {\n    socket = io(SocketServer);\n    const init = {\n      partyId: partyId,\n      token: token\n    };\n    socket.emit('newPlayer', init);\n    socket.on('userConnected', rouge => {\n      console.log(rouge);\n      appendMessage(rouge + ' is connected');\n    });\n  });\n  useEffect(() => {\n    const name = 'TEST';\n    const room = 'TEST';\n    socket = io(SocketServer);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [SocketServer, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on('roomData', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  if (!token) {\n    return React.createElement(Redirect, {\n      to: \"/users/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6\",\n    style: {\n      borderRight: '1px solid #ccc',\n      borderLeft: '1px solid #ccc'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    id: \"gameCanvas\",\n    width: \"480\",\n    height: \"640\",\n    style: {\n      border: \"1px solid black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"range\",\n    min: \"1\",\n    max: \"10\",\n    value: \"1\",\n    class: \"slider\",\n    id: \"lineWidth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(\"input\", {\n    type: \"color\",\n    id: \"lineColor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col-4\",\n    style: {\n      borderRight: '1px solid #ccc'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"message-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"form-control width100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    class: \"input-group-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    class: \"btn btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Submit\"))))), React.createElement(\"div\", {\n    className: \"col\",\n    style: {\n      borderRight: '1px solid #ccc'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Players\"));\n};\n\nexport default IngameSocket;\n/*export default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket,\n        }\n    }\n    render() {\n        return (\n            <div>\n                TEST\n            </div>\n        )\n    }\n} */\n\n/* import React, { Component, useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"\n//import axios from 'axios';\nimport io from 'socket.io-client'\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = localStorage.getItem('partyID');\n        \n\n        const socket = io('http://localhost:7001/')\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket\n        }\n    }\n\n    componentDidMount(){\n        console.log('party id:')\n        console.log(this.state.partyId);\n        const init = {\n            partyId: this.state.partyId,\n            token: this.state.token\n        }\n        this.state.socket.emit('newPlayer', init)\n\n    }\n\n    \n    render() {\n\n        if (!this.state.token){\n            return (<Redirect to=\"/users/login\"/>)\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-6\" style={{borderRight: '1px solid #ccc', borderLeft: '1px solid #ccc'}}>\n                    <canvas \n                        id = \"gameCanvas\"\n                        ref=\"game\" \n                        width=\"480\" \n                        height = \"640\" \n                        style = {{border: \"1px solid black\"}}>\n                    </canvas>\n                    <p>\n                    <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>\n                    <button >Clear</button>\n                    <input type=\"color\" id=\"lineColor\"/>\n                    </p>\n                </div>\n                <div className=\"col-4\" style={{borderRight: '1px solid #ccc'}}>\n                    <ul id=\"messages\"></ul>\n                    <Footer>\n                        <div class=\"input-group\">\n                            <input class=\"form-control width100\"/>\n                            <span class=\"input-group-btn\">\n                                <button class=\"btn btn-info\">Submit</button>\n                            </span>\n                        </div>\n                    </Footer>\n                </div>\n                <div className=\"col\" style={{borderRight: '1px solid #ccc'}}>\n                    Players\n                </div>\n            </div>\n            \n        )\n    }\n} */\n\n/* <div className=\"row mt-5\">\n<div className=\"col-md-4 m-auto\" width='50%'>\n    <div>\n        <canvas \n        id = \"gameCanvas\"\n        ref=\"game\" \n        width=\"480\" \n        height = \"640\" \n        style = {{border: \"1px solid black\"}}>\n        </canvas>\n        <p>\n        <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>>\n        <button >Clear</button>\n        <input type=\"color\" id=\"lineColor\"/>\n        </p>\n    </div>\n</div>\n<div className=\"col-md-4 m-auto\" width = '50%'>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <Footer>\n        <div class=\"input-group\">\n            <input class=\"form-control width100\"/>\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-info\">Submit</button>\n            </span>\n        </div>\n        </Footer>\n    </div>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <div className=\"card card-body text-center\">\n            TEST\n        </div>\n    </div>\n</div>\n\n</div> */","map":{"version":3,"sources":["/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js"],"names":["React","useState","useEffect","Component","io","Redirect","Footer","socket","IngameSocket","location","token","localStorage","getItem","partyId","state","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","SocketServer","appendMessage","messageContainer","document","getElementById","console","log","messageElement","createElement","innerText","append","init","emit","on","rouge","error","alert","search","off","sendMessage","event","preventDefault","borderRight","borderLeft","border"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAGnC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,OAAO,GAAGF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;AAEA,OAAKE,KAAL,GAAa,EAAb;;AANmC,oBASXb,QAAQ,CAAC,EAAD,CATG;AAAA;AAAA,QAS5Bc,IAT4B;AAAA,QAStBC,OATsB;;AAAA,qBAUXf,QAAQ,CAAC,EAAD,CAVG;AAAA;AAAA,QAU5BgB,IAV4B;AAAA,QAUtBC,OAVsB;;AAAA,qBAWTjB,QAAQ,CAAC,EAAD,CAXC;AAAA;AAAA,QAW5BkB,KAX4B;AAAA,QAWrBC,QAXqB;;AAAA,qBAYLnB,QAAQ,CAAC,EAAD,CAZH;AAAA;AAAA,QAY5BoB,OAZ4B;AAAA,QAYnBC,UAZmB;;AAAA,qBAaHrB,QAAQ,CAAC,EAAD,CAbL;AAAA;AAAA,QAa5BsB,QAb4B;AAAA,QAalBC,WAbkB;;AAcnC,QAAMC,YAAY,GAAG,wBAArB;;AAEA,WAASC,aAAT,CAAuBL,OAAvB,EAAgC;AAC5B,UAAMM,gBAAgB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACA,UAAMK,cAAc,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAvB;AACAD,IAAAA,cAAc,CAACE,SAAf,GAA2Bb,OAA3B;AACAM,IAAAA,gBAAgB,CAACQ,MAAjB,CAAwBH,cAAxB;AACH;;AAED9B,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,GAAGH,EAAE,CAACqB,YAAD,CAAX;AACA,UAAMW,IAAI,GAAG;AACTvB,MAAAA,OAAO,EAAEA,OADA;AAETH,MAAAA,KAAK,EAAEA;AAFE,KAAb;AAIAH,IAAAA,MAAM,CAAC8B,IAAP,CAAY,WAAZ,EAAyBD,IAAzB;AACA7B,IAAAA,MAAM,CAAC+B,EAAP,CAAU,eAAV,EAA2BC,KAAK,IAAI;AAChCT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACAb,MAAAA,aAAa,CAACa,KAAK,GAAG,eAAT,CAAb;AACC,KAHL;AAIH,GAXQ,CAAT;AAaArC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,IAAI,GAAG,MAAb;AACA,UAAME,IAAI,GAAG,MAAb;AAEAV,IAAAA,MAAM,GAAGH,EAAE,CAACqB,YAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAR,IAAAA,MAAM,CAAC8B,IAAP,CAAY,MAAZ,EAAoB;AAAEtB,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCuB,KAAD,IAAW;AAC/C,UAAGA,KAAH,EAAU;AACNC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACA,KAJD;AAKH,GAdQ,EAcN,CAACf,YAAD,EAAehB,QAAQ,CAACiC,MAAxB,CAdM,CAAT;AAgBAxC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAAC+B,EAAP,CAAU,SAAV,EAAsBjB,OAAD,IAAa;AAClCG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACC,KAFD;AAIAd,IAAAA,MAAM,CAAC+B,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAEnB,MAAAA;AAAF,KAAD,KAAe;AACrCC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACC,KAFD;AAIA,WAAO,MAAM;AACbZ,MAAAA,MAAM,CAAC8B,IAAP,CAAY,YAAZ;AAEA9B,MAAAA,MAAM,CAACoC,GAAP;AACC,KAJD;AAKH,GAdQ,EAcN,CAACpB,QAAD,CAdM,CAAT;;AAgBA,QAAMqB,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGzB,OAAH,EAAY;AACZd,MAAAA,MAAM,CAAC8B,IAAP,CAAY,aAAZ,EAA2BhB,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACC;AACJ,GAND;;AASA,MAAI,CAACZ,KAAL,EAAW;AACP,WAAQ,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAACqC,MAAAA,WAAW,EAAE,gBAAd;AAAgCC,MAAAA,UAAU,EAAE;AAA5C,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACQ,IAAA,EAAE,EAAG,YADb;AAEQ,IAAA,KAAK,EAAC,KAFd;AAGQ,IAAA,MAAM,EAAG,KAHjB;AAIQ,IAAA,KAAK,EAAI;AAACC,MAAAA,MAAM,EAAE;AAAT,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,GAAG,EAAC,GAAxB;AAA4B,IAAA,GAAG,EAAC,IAAhC;AAAqC,IAAA,KAAK,EAAC,GAA3C;AAA+C,IAAA,KAAK,EAAC,QAArD;AAA8D,IAAA,EAAE,EAAC,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,EAGA;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CAPJ,CADJ,EAcI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAACF,MAAAA,WAAW,EAAE;AAAd,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,KAAK,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAFJ,CADJ,CAFJ,CAdJ,EAyBI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAACA,MAAAA,WAAW,EAAE;AAAd,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBJ,CADJ;AAiCH,CAlHD;;AAoHA,eAAevC,YAAf;AACA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"\n\nlet socket;\n\nconst IngameSocket = ({ location }) => {\n    \n\n    const token = localStorage.getItem('token');\n    const partyId = localStorage.getItem('partyID');\n    \n    this.state = {\n        \n    }\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const SocketServer = 'http://localhost:7001/';\n\n    function appendMessage(message) {\n        const messageContainer = document.getElementById('message-container')\n        console.log(messageContainer)\n        const messageElement = document.createElement('div')\n        messageElement.innerText = message\n        messageContainer.append(messageElement)\n    }\n\n    useEffect(() => {\n        socket = io(SocketServer);\n        const init = {\n            partyId: partyId,\n            token: token\n        }\n        socket.emit('newPlayer', init)\n        socket.on('userConnected', rouge => {\n            console.log(rouge);\n            appendMessage(rouge + ' is connected')\n            })\n    })\n\n    useEffect(() => {\n        const name = 'TEST';\n        const room = 'TEST';\n\n        socket = io(SocketServer);\n\n        setRoom(room);\n        setName(name)\n\n        socket.emit('join', { name, room }, (error) => {\n        if(error) {\n            alert(error);\n        }\n        });\n    }, [SocketServer, location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n        setMessages([...messages, message ]);\n        });\n\n        socket.on('roomData', ({ users }) => {\n        setUsers(users);\n        })\n\n        return () => {\n        socket.emit('disconnect');\n\n        socket.off();\n        }\n    }, [messages])\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n        socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n    \n    if (!token){\n        return (<Redirect to=\"/users/login\"/>)\n    }\n    return (\n        <div className=\"row\">\n            <div className=\"col-6\" style={{borderRight: '1px solid #ccc', borderLeft: '1px solid #ccc'}}>\n            <canvas \n                    id = \"gameCanvas\"\n                    width=\"480\"\n                    height = \"640\" \n                    style = {{border: \"1px solid black\"}}>\n                </canvas>\n                <p>\n                <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>\n                <button >Clear</button>\n                <input type=\"color\" id=\"lineColor\"/>\n                </p>\n            </div>\n            <div className=\"col-4\" style={{borderRight: '1px solid #ccc'}}>\n                <div id=\"message-container\"></div>\n                <Footer>\n                    <div class=\"input-group\">\n                        <input class=\"form-control width100\"/>\n                        <span class=\"input-group-btn\">\n                            <button class=\"btn btn-info\">Submit</button>\n                        </span>\n                    </div>\n                </Footer>\n            </div>\n            <div className=\"col\" style={{borderRight: '1px solid #ccc'}}>\n                Players\n            </div>\n        </div>\n        \n    )\n    \n};\n\nexport default IngameSocket\n/*export default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket,\n        }\n    }\n    render() {\n        return (\n            <div>\n                TEST\n            </div>\n        )\n    }\n} */\n\n/* import React, { Component, useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"\n//import axios from 'axios';\nimport io from 'socket.io-client'\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = localStorage.getItem('partyID');\n        \n\n        const socket = io('http://localhost:7001/')\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket\n        }\n    }\n\n    componentDidMount(){\n        console.log('party id:')\n        console.log(this.state.partyId);\n        const init = {\n            partyId: this.state.partyId,\n            token: this.state.token\n        }\n        this.state.socket.emit('newPlayer', init)\n\n    }\n\n    \n    render() {\n\n        if (!this.state.token){\n            return (<Redirect to=\"/users/login\"/>)\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-6\" style={{borderRight: '1px solid #ccc', borderLeft: '1px solid #ccc'}}>\n                    <canvas \n                        id = \"gameCanvas\"\n                        ref=\"game\" \n                        width=\"480\" \n                        height = \"640\" \n                        style = {{border: \"1px solid black\"}}>\n                    </canvas>\n                    <p>\n                    <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>\n                    <button >Clear</button>\n                    <input type=\"color\" id=\"lineColor\"/>\n                    </p>\n                </div>\n                <div className=\"col-4\" style={{borderRight: '1px solid #ccc'}}>\n                    <ul id=\"messages\"></ul>\n                    <Footer>\n                        <div class=\"input-group\">\n                            <input class=\"form-control width100\"/>\n                            <span class=\"input-group-btn\">\n                                <button class=\"btn btn-info\">Submit</button>\n                            </span>\n                        </div>\n                    </Footer>\n                </div>\n                <div className=\"col\" style={{borderRight: '1px solid #ccc'}}>\n                    Players\n                </div>\n            </div>\n            \n        )\n    }\n} */\n\n\n\n/* <div className=\"row mt-5\">\n<div className=\"col-md-4 m-auto\" width='50%'>\n    <div>\n        <canvas \n        id = \"gameCanvas\"\n        ref=\"game\" \n        width=\"480\" \n        height = \"640\" \n        style = {{border: \"1px solid black\"}}>\n        </canvas>\n        <p>\n        <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>>\n        <button >Clear</button>\n        <input type=\"color\" id=\"lineColor\"/>\n        </p>\n    </div>\n</div>\n<div className=\"col-md-4 m-auto\" width = '50%'>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <Footer>\n        <div class=\"input-group\">\n            <input class=\"form-control width100\"/>\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-info\">Submit</button>\n            </span>\n        </div>\n        </Footer>\n    </div>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <div className=\"card card-body text-center\">\n            TEST\n        </div>\n    </div>\n</div>\n\n</div> */"]},"metadata":{},"sourceType":"module"}