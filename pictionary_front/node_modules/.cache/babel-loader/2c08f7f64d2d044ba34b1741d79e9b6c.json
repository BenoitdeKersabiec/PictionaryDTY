{"ast":null,"code":"var _jsxFileName = \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js\";\n\n/* import React, { useState, useEffect, Component } from \"react\";\nimport io from \"socket.io-client\";\n\nlet socket;\n\nconst IngameSocket = ({ location }) => {\n    \n\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const SocketServer = 'http://localhost:7001/';\n\n    useEffect(() => {\n        const name = 'TEST';\n        const room = 'TEST';\n\n        socket = io(SocketServer);\n\n        setRoom(room);\n        setName(name)\n\n        socket.emit('join', { name, room }, (error) => {\n        if(error) {\n            alert(error);\n        }\n        });\n    }, [SocketServer, location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n        setMessages([...messages, message ]);\n        });\n\n        socket.on('roomData', ({ users }) => {\n        setUsers(users);\n        })\n\n        return () => {\n        socket.emit('disconnect');\n\n        socket.off();\n        }\n    }, [messages])\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n        socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n};\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket,\n        }\n    }\n    render() {\n        return (\n            <div>\n                TEST\n            </div>\n        )\n    }\n} */\nimport React, { Component, useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"; //import axios from 'axios';\n\nimport io from 'socket.io-client';\nexport default class Ingame extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem('token');\n    const partyId = this.props.match.params.id;\n    this.SocketManager = this.SocketManager.bind(this);\n    const socket = io('http://localhost:7001/');\n    this.state = {\n      token,\n      partyId,\n      socket\n    };\n  }\n\n  componentDidMount() {\n    const init = {\n      partyId: this.state.partyId,\n      token: this.state.token\n    };\n    this.state.socket.emit('newPlayer', init);\n  }\n\n  tset() {\n    useEffect(() => {\n      socket.on('message', message => {\n        setMessages([...messages, message]);\n      });\n      socket.on('roomData', ({\n        users\n      }) => {\n        setUsers(users);\n      });\n      return () => {\n        socket.emit('disconnect');\n        socket.off();\n      };\n    }, [messages]);\n  }\n\n  SocketManager() {\n    const socket = io('http://localhost:7001/');\n    socket.on('user-connected', name => console.log(name));\n  }\n\n  render() {\n    const socket = io('http://localhost:7001/');\n    socket.on('user-connected', name => console.log(name));\n\n    if (!this.state.token) {\n      return React.createElement(Redirect, {\n        to: \"/users/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6\",\n      style: {\n        borderRight: '1px solid #ccc',\n        borderLeft: '1px solid #ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"gameCanvas\",\n      ref: \"game\",\n      width: \"480\",\n      height: \"640\",\n      style: {\n        border: \"1px solid black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"range\",\n      min: \"1\",\n      max: \"10\",\n      value: \"1\",\n      class: \"slider\",\n      id: \"lineWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(\"input\", {\n      type: \"color\",\n      id: \"lineColor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-4\",\n      style: {\n        borderRight: '1px solid #ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"form-control width100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"input-group-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"btn btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(\"div\", {\n      className: \"col\",\n      style: {\n        borderRight: '1px solid #ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Players\"));\n  }\n\n}\n/* <div className=\"row mt-5\">\n<div className=\"col-md-4 m-auto\" width='50%'>\n    <div>\n        <canvas \n        id = \"gameCanvas\"\n        ref=\"game\" \n        width=\"480\" \n        height = \"640\" \n        style = {{border: \"1px solid black\"}}>\n        </canvas>\n        <p>\n        <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>>\n        <button >Clear</button>\n        <input type=\"color\" id=\"lineColor\"/>\n        </p>\n    </div>\n</div>\n<div className=\"col-md-4 m-auto\" width = '50%'>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <Footer>\n        <div class=\"input-group\">\n            <input class=\"form-control width100\"/>\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-info\">Submit</button>\n            </span>\n        </div>\n        </Footer>\n    </div>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <div className=\"card card-body text-center\">\n            TEST\n        </div>\n    </div>\n</div>\n\n</div> */","map":{"version":3,"sources":["/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js"],"names":["React","Component","useEffect","Redirect","Footer","io","Ingame","constructor","props","token","localStorage","getItem","partyId","match","params","id","SocketManager","bind","socket","state","componentDidMount","init","emit","tset","on","message","setMessages","messages","users","setUsers","off","name","console","log","render","borderRight","borderLeft","border"],"mappings":"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","sourcesContent":["/* import React, { useState, useEffect, Component } from \"react\";\nimport io from \"socket.io-client\";\n\nlet socket;\n\nconst IngameSocket = ({ location }) => {\n    \n\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const SocketServer = 'http://localhost:7001/';\n\n    useEffect(() => {\n        const name = 'TEST';\n        const room = 'TEST';\n\n        socket = io(SocketServer);\n\n        setRoom(room);\n        setName(name)\n\n        socket.emit('join', { name, room }, (error) => {\n        if(error) {\n            alert(error);\n        }\n        });\n    }, [SocketServer, location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n        setMessages([...messages, message ]);\n        });\n\n        socket.on('roomData', ({ users }) => {\n        setUsers(users);\n        })\n\n        return () => {\n        socket.emit('disconnect');\n\n        socket.off();\n        }\n    }, [messages])\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n        socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n\n};\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket,\n        }\n    }\n    render() {\n        return (\n            <div>\n                TEST\n            </div>\n        )\n    }\n} */\n\nimport React, { Component, useEffect } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport Footer from \"../JSXaux/Footer\"\n//import axios from 'axios';\nimport io from 'socket.io-client'\n\nexport default class Ingame extends Component {\n    constructor(props){\n        super(props);\n        const token = localStorage.getItem('token');\n        const partyId = this.props.match.params.id;\n\n        this.SocketManager = this.SocketManager.bind(this);\n\n        const socket = io('http://localhost:7001/')\n        \n        \n        this.state = {\n            token,\n            partyId,\n            socket\n        }\n    }\n\n    componentDidMount(){\n        const init = {\n            partyId: this.state.partyId,\n            token: this.state.token\n        }\n        this.state.socket.emit('newPlayer', init)\n\n    }\n\n    tset(){useEffect(() => {\n        socket.on('message', (message) => {\n        setMessages([...messages, message ]);\n        });\n\n        socket.on('roomData', ({ users }) => {\n        setUsers(users);\n        })\n\n        return () => {\n        socket.emit('disconnect');\n\n        socket.off();\n        }\n    }, [messages])}\n\n    SocketManager(){\n        const socket = io('http://localhost:7001/')\n        socket.on('user-connected', name => console.log(name))\n    }\n\n\n\n    render() {\n        const socket = io('http://localhost:7001/')\n        socket.on('user-connected', name => console.log(name))\n\n        if (!this.state.token){\n            return (<Redirect to=\"/users/login\"/>)\n        }\n        return (\n            <div className=\"row\">\n                <div className=\"col-6\" style={{borderRight: '1px solid #ccc', borderLeft: '1px solid #ccc'}}>\n                    <canvas \n                        id = \"gameCanvas\"\n                        ref=\"game\" \n                        width=\"480\" \n                        height = \"640\" \n                        style = {{border: \"1px solid black\"}}>\n                    </canvas>\n                    <p>\n                    <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>\n                    <button >Clear</button>\n                    <input type=\"color\" id=\"lineColor\"/>\n                    </p>\n                </div>\n                <div className=\"col-4\" style={{borderRight: '1px solid #ccc'}}>\n                    <ul id=\"messages\"></ul>\n                    <Footer>\n                        <div class=\"input-group\">\n                            <input class=\"form-control width100\"/>\n                            <span class=\"input-group-btn\">\n                                <button class=\"btn btn-info\">Submit</button>\n                            </span>\n                        </div>\n                    </Footer>\n                </div>\n                <div className=\"col\" style={{borderRight: '1px solid #ccc'}}>\n                    Players\n                </div>\n            </div>\n            \n        )\n    }\n}\n/* <div className=\"row mt-5\">\n<div className=\"col-md-4 m-auto\" width='50%'>\n    <div>\n        <canvas \n        id = \"gameCanvas\"\n        ref=\"game\" \n        width=\"480\" \n        height = \"640\" \n        style = {{border: \"1px solid black\"}}>\n        </canvas>\n        <p>\n        <input type=\"range\" min=\"1\" max=\"10\" value=\"1\" class=\"slider\" id=\"lineWidth\"/>>\n        <button >Clear</button>\n        <input type=\"color\" id=\"lineColor\"/>\n        </p>\n    </div>\n</div>\n<div className=\"col-md-4 m-auto\" width = '50%'>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <Footer>\n        <div class=\"input-group\">\n            <input class=\"form-control width100\"/>\n            <span class=\"input-group-btn\">\n                <button class=\"btn btn-info\">Submit</button>\n            </span>\n        </div>\n        </Footer>\n    </div>\n    <div className=\"col-md-4 m-auto\" width = '25%'>\n        <div className=\"card card-body text-center\">\n            TEST\n        </div>\n    </div>\n</div>\n\n</div> */"]},"metadata":{},"sourceType":"module"}