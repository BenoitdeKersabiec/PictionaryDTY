{"ast":null,"code":"import _slicedToArray from \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst useChat = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient(\"http://localhost:7001\");\n    socketRef.current.on(\"newChatMessage\", ({\n      message\n    }) => {\n      setMessages(messages => [...messages, message]);\n    });\n    socketRef.current.on('user-connected', name => console.log(name));\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = ({\n    message\n  }) => {\n    socketRef.current.emit(\"newChatMessage\", {\n      message\n    });\n  };\n\n  return {\n    messages,\n    sendMessage\n  };\n};\n\nexport default useChat;","map":{"version":3,"sources":["/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/SocketFunction/Socketfunctions.js"],"names":["useEffect","useRef","useState","socketIOClient","useChat","messages","setMessages","socketRef","current","on","message","name","console","log","disconnect","sendMessage","emit"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACYF,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACbG,QADa;AAAA,QACHC,WADG;;AAEpB,QAAMC,SAAS,GAAGN,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEdO,IAAAA,SAAS,CAACC,OAAV,GAAoBL,cAAc,CAChC,uBADgC,CAAlC;AAIAI,IAAAA,SAAS,CAACC,OAAV,CAAkBC,EAAlB,CACE,gBADF,EAEE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AACfJ,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcK,OAAd,CAAb,CAAX;AACD,KAJH;AAMAH,IAAAA,SAAS,CAACC,OAAV,CAAkBC,EAAlB,CACI,gBADJ,EACsBE,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAD9B;AAIA,WAAO,MAAM;AACXJ,MAAAA,SAAS,CAACC,OAAV,CAAkBM,UAAlB;AACD,KAFD;AAGD,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,QAAMC,WAAW,GAAG,CAAC;AAAEL,IAAAA;AAAF,GAAD,KAAiB;AACnCH,IAAAA,SAAS,CAACC,OAAV,CAAkBQ,IAAlB,CAAuB,gBAAvB,EAAyC;AAAEN,MAAAA;AAAF,KAAzC;AACD,GAFD;;AAIA,SAAO;AAAEL,IAAAA,QAAF;AAAYU,IAAAA;AAAZ,GAAP;AACD,CA9BD;;AAgCA,eAAeX,OAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst useChat = () => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n\n  useEffect(() => {\n    \n    socketRef.current = socketIOClient(\n      \"http://localhost:7001\"\n    );\n\n    socketRef.current.on(\n      \"newChatMessage\",\n      ({ message }) => {\n        setMessages(messages => [...messages, message]);\n      }\n    );\n    socketRef.current.on(\n        'user-connected', name => console.log(name)\n    )\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = ({ message }) => {\n    socketRef.current.emit(\"newChatMessage\", { message });\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default useChat;"]},"metadata":{},"sourceType":"module"}