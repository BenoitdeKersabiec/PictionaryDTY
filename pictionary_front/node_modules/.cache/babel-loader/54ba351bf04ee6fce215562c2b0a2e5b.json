{"ast":null,"code":"import _slicedToArray from \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js\";\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        users = _useState6[0],\n        setUsers = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        messages = _useState10[0],\n        setMessages = _useState10[1];\n\n  const SocketServer = 'http://localhost:7001/';\n  useEffect(() => {\n    const name = TEST;\n    socket = io(SocketServer);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on('roomData', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(TextContainer, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/ingame.component.js"],"names":["React","useState","useEffect","io","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","SocketServer","TEST","emit","error","alert","ENDPOINT","search","on","off","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const SocketServer = 'http://localhost:7001/';\n\n  useEffect(() => {\n    const name = TEST\n\n    socket = io(SocketServer);\n\n    setRoom(room);\n    setName(name)\n\n    socket.emit('join', { name, room }, (error) => {\n      if(error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages([...messages, message ]);\n    });\n\n    socket.on('roomData', ({ users }) => {\n      setUsers(users);\n    })\n\n    return () => {\n      socket.emit('disconnect');\n\n      socket.off();\n    }\n  }, [messages])\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if(message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  }\n\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container\">\n          <InfoBar room={room} />\n          <Messages messages={messages} name={name} />\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n      <TextContainer users={users}/>\n    </div>\n  );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}