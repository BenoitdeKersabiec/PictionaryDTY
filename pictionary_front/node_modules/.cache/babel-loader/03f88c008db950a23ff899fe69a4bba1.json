{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/words.component.js\";\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { contextUserData } from '../Context';\nimport jwt from 'jsonwebtoken';\nimport { withRouter } from \"react-router-dom\";\nimport './addtop.css';\nexport default withRouter((_temp = _class = class Words extends Component {\n  constructor(props) {\n    super(props);\n    this.displayWords = this.displayWords.bind(this);\n    this.onChangeWord = this.onChangeWord.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      token: '',\n      words: [],\n      newWord: ''\n    };\n  }\n\n  componentDidMount(e) {\n    const token = this.context.token;\n    const data = jwt.decode(token);\n\n    if (!data) {\n      this.context.setFlashMsg({\n        type: \"warning\",\n        msg: \"Please log in to access this content\"\n      });\n      this.props.history.push(\"/users/login\");\n    } else {\n      if (!data.isAdmin) {\n        this.context.setFlashMsg({\n          type: \"warning\",\n          msg: \"Only an admin account can access this content\"\n        });\n        this.props.history.push('/users/login');\n      } else {\n        this.setState({\n          token: token,\n          isAdmin: data.isAdmin\n        });\n        axios.get('http://localhost:7000/word/words', {\n          params: {\n            token: token\n          }\n        }).then(res => this.setState({\n          words: res.data\n        })).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  }\n\n  displayWords(e) {\n    return this.state.words.map(word => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, word.word, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"close\",\n        \"aria-label\": \"Close\",\n        onClick: () => this.onClickDelete(word._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\xD7\")));\n    });\n  }\n\n  onClickDelete(wordId) {\n    axios.get('http://localhost:7000/word/delete', {\n      params: {\n        token: this.state.token,\n        wordId: wordId\n      }\n    }).then(res => {\n      this.props.history.push('/words/');\n    });\n  }\n\n  onChangeWord(e) {\n    this.setState({\n      newWord: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newWord = {\n      token: this.state.token,\n      word: this.state.newWord\n    };\n\n    if (newWord.word !== '') {\n      axios.post('http://localhost:7000/word/newword', newWord).then(res => {\n        if (res.data.msg === 'success') {\n          axios.get('http://localhost:7000/word/words', {\n            params: {\n              token: this.state.token\n            }\n          }).then(res => this.setState({\n            words: res.data\n          })).catch(error => {\n            console.log(error);\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"addtop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card text-white bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Word Manager\")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary btn-block\",\n      onClick: () => this.props.history.push('/dashboard'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"DashBoard\")), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.newWord,\n      onChange: this.onChangeWord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Add a word\")))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.displayWords())));\n  }\n\n}, _class.contextType = contextUserData, _temp));","map":{"version":3,"sources":["/home/benoit/Documents/Lab/pictionnary crash_test/pictionary_front/src/components/words.component.js"],"names":["React","Component","axios","contextUserData","jwt","withRouter","Words","constructor","props","displayWords","bind","onChangeWord","onSubmit","state","token","words","newWord","componentDidMount","e","context","data","decode","setFlashMsg","type","msg","history","push","isAdmin","setState","get","params","then","res","catch","error","console","log","map","word","onClickDelete","_id","wordId","target","value","preventDefault","post","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport { contextUserData } from '../Context'\nimport jwt from 'jsonwebtoken';\nimport { withRouter } from \"react-router-dom\";\n\nimport './addtop.css'\n\nexport default withRouter(class Words extends Component {\n    static contextType = contextUserData\n\n    constructor(props){\n        super(props);\n\n        this.displayWords = this.displayWords.bind(this);\n        this.onChangeWord = this.onChangeWord.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            token:'',\n            words: [],\n            newWord:''\n        }\n    }\n\n    componentDidMount(e){\n        const token = this.context.token;\n        const data = jwt.decode(token);\n        if(!data){\n            this.context.setFlashMsg({type: \"warning\", msg: \"Please log in to access this content\"})\n            this.props.history.push(\"/users/login\")\n        } else {\n            if(!data.isAdmin){\n                this.context.setFlashMsg({type: \"warning\", msg: \"Only an admin account can access this content\"})\n                this.props.history.push('/users/login')\n            } else {\n                this.setState({token: token, isAdmin: data.isAdmin})\n    \n           \n                axios.get('http://localhost:7000/word/words', {\n                    params: {\n                    token: token\n                    }})\n                .then(res => this.setState({words: res.data})\n                )\n                .catch((error) => {\n                    console.log(error);\n                })\n            }\n    \n\n        }\n\n    }\n\n    displayWords(e){\n        return(\n            this.state.words.map(word => {\n                return (\n                    <li className=\"list-group-item\">\n                        {word.word}\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" onClick={() => this.onClickDelete(word._id)}>\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </li>\n                )\n            })\n        )\n        \n    }\n\n    onClickDelete(wordId){\n        axios.get('http://localhost:7000/word/delete', {\n            params: {\n              token: this.state.token,\n              wordId: wordId\n            }}).then(res => {\n                this.props.history.push('/words/')\n            })\n    }\n\n    onChangeWord(e){\n        this.setState({\n            newWord: e.target.value\n        })\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newWord = {\n            token:this.state.token,\n            word: this.state.newWord\n        }\n        if (newWord.word !==''){\n            axios.post('http://localhost:7000/word/newword', newWord)\n            .then(res => {\n                if (res.data.msg === 'success'){\n                    axios.get('http://localhost:7000/word/words', {\n                        params: {\n                        token: this.state.token\n                        }})\n                    .then(res => this.setState({words: res.data})\n                    )\n                    .catch((error) => {\n                        console.log(error);\n                    })\n                }\n            });\n        }\n            \n    }\n\n\n    render() {\n        return (\n            <div className=\"addtop\">                   \n                    <div className=\"card text-white bg-primary\" >\n                    <div className=\"card-header text-center\">\n                        <h1>Word Manager</h1>\n                    </div>\n                    <div className=\"card-body\">\n                    \n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button \n                            type=\"submit\" \n                            className=\"btn btn-secondary btn-block\" \n                            onClick={()=> this.props.history.push('/dashboard')}>\n                                DashBoard\n                            </button>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"input-group\">\n                                <input \n                                className=\"form-control\"\n                                value={this.state.newWord}\n                                onChange={this.onChangeWord}\n                                />\n                                <button \n                                type=\"submit\" \n                                className=\"btn btn-secondary\" \n                                onClick={this.onSubmit}>\n                                    Add a word\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                <div>\n                    <ul>{ this.displayWords() }</ul>\n                </div>\n            </div>\n        )\n    }\n})\n"]},"metadata":{},"sourceType":"module"}